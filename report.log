2024-06-16 21:27:25,275 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (6,)
Traceback (most recent call last):
  File "/home/siema/.cache/pypoetry/virtualenvs/inteligencja2-dsP7KcTb-py3.12/lib/python3.12/site-packages/pyswarms/backend/generators.py", line 81, in generate_swarm
    pos = center * np.random.uniform(
                   ^^^^^^^^^^^^^^^^^^
  File "numpy/random/mtrand.pyx", line 1171, in numpy.random.mtrand.RandomState.uniform
  File "_common.pyx", line 600, in numpy.random._common.cont
  File "_common.pyx", line 517, in numpy.random._common.cont_broadcast_2
  File "__init__.cython-30.pxd", line 780, in numpy.PyArray_MultiIterNew3
ValueError: shape mismatch: objects cannot be broadcast to a single shape.  Mismatch is between arg 0 with shape (10, 6) and arg 1 with shape (10, 0).
2024-06-16 21:27:56,810 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (6,)
Traceback (most recent call last):
  File "/home/siema/.cache/pypoetry/virtualenvs/inteligencja2-dsP7KcTb-py3.12/lib/python3.12/site-packages/pyswarms/backend/generators.py", line 81, in generate_swarm
    pos = center * np.random.uniform(
                   ^^^^^^^^^^^^^^^^^^
  File "numpy/random/mtrand.pyx", line 1171, in numpy.random.mtrand.RandomState.uniform
  File "_common.pyx", line 600, in numpy.random._common.cont
  File "_common.pyx", line 517, in numpy.random._common.cont_broadcast_2
  File "__init__.cython-30.pxd", line 780, in numpy.PyArray_MultiIterNew3
ValueError: shape mismatch: objects cannot be broadcast to a single shape.  Mismatch is between arg 0 with shape (10, 6) and arg 1 with shape (10, 0).
2024-06-16 21:28:12,699 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (6,)
Traceback (most recent call last):
  File "/home/siema/.cache/pypoetry/virtualenvs/inteligencja2-dsP7KcTb-py3.12/lib/python3.12/site-packages/pyswarms/backend/generators.py", line 81, in generate_swarm
    pos = center * np.random.uniform(
                   ^^^^^^^^^^^^^^^^^^
  File "numpy/random/mtrand.pyx", line 1171, in numpy.random.mtrand.RandomState.uniform
  File "_common.pyx", line 600, in numpy.random._common.cont
  File "_common.pyx", line 517, in numpy.random._common.cont_broadcast_2
  File "__init__.cython-30.pxd", line 780, in numpy.PyArray_MultiIterNew3
ValueError: shape mismatch: objects cannot be broadcast to a single shape.  Mismatch is between arg 0 with shape (10, 6) and arg 1 with shape (10, 48).
2024-06-16 21:34:06,486 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2024-06-16 21:39:30,091 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2024-06-16 21:39:31,222 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -182.0, best pos: [0.36686239 0.39399315 0.46411094 0.46346067 0.70815757 0.14682165
 0.63870038 0.73339264 0.36947093 0.29010491 0.11667187 0.7695895
 0.48103445 0.58332354 0.52586341 0.5022139  0.20072468 0.31981281
 0.48956171 0.30510549 0.70700571 0.44050467 0.8270235  0.60629335
 0.72646836 0.63480766 0.34160078 0.72039386 0.46557791 0.30835527
 0.81023259 0.26062592 0.13946102 0.71456949 0.56299583 0.67868309
 0.53703218 0.59019793 0.61172369 0.54694476 0.68055981 0.40346622
 0.10148564 0.48086714 0.29556756 0.71276914 0.74493866]
2024-06-16 21:39:52,175 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2024-06-16 21:39:53,420 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -188.0, best pos: [0.37145351 0.64835552 0.51072514 0.54317534 0.82181687 0.75345237
 0.46956209 0.25678461 0.47548836 0.56334141 0.80867717 0.72076581
 0.74902794 0.61964681 0.2514977  0.20927325 0.59194139 0.19333671
 0.57467856 0.49031611 0.11454465 0.48131932 0.71398364 0.34201081
 0.69470543 0.80949113 0.2851686  0.66155    0.35295649 0.79459079
 0.56353507 0.51151984 0.20078364 0.62553464 0.25734042 0.62562531
 0.52128977 0.27135006 0.47432053 0.48232444 0.24517745 0.6393355
 0.39083581 0.70077578 0.29957094 0.34320742 0.84710126]
2024-06-16 21:41:00,517 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2024-06-16 21:41:09,235 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -194.0, best pos: [0.29999221 0.50813669 0.66461292 0.43546408 0.22429416 0.59211315
 0.44055562 0.71859151 0.48179191 0.66162444 0.60987321 0.7744601
 0.3277258  0.18366455 0.40585799 0.56238259 0.69391518 0.67958583
 0.58168312 0.80501244 0.58269746 0.31568315 0.55808498 0.71299452
 0.34011585 0.24797991 0.42546    0.54507659 0.80384188 0.44506246
 0.39255682 0.78487819 0.70518261 0.59747295 0.35792685 0.83848239
 0.56724719 0.26465046 0.47318098 0.61228544 0.66611925 0.3614902
 0.18078018 0.51375002 0.57179438 0.42336577 0.27982539]
2024-06-16 21:42:34,129 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2024-06-16 21:42:42,858 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -189.0, best pos: [0.76080953 0.5393146  0.60057711 0.36439066 0.44381301 0.63230418
 0.50401996 0.69026075 0.36527815 0.58954361 0.51979655 0.54241452
 0.77268534 0.8622031  0.37433835 0.56564349 0.18832844 0.43469286
 0.28534758 0.34033893 0.80178029 0.56039917 0.73785805 0.66840244
 0.50919185 0.15138574 0.59065274 0.89838473 0.32954141 0.30585539
 0.13103253 0.83574996 0.42332444 0.69884452 0.43083708 0.24284383
 0.71366516 0.88587992 0.37608257 0.60507455 0.59161605 0.58066372
 0.56995417 0.53487282 0.29786739 0.37327087 0.65842246]
2024-06-16 21:43:06,863 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2024-06-16 21:43:08,282 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -182.0, best pos: [0.17333304 0.30125167 0.55102927 0.53611062 0.30933634 0.79804908
 0.21983485 0.60926155 0.55573863 0.79381983 0.82961827 0.4545203
 0.77505571 0.12739856 0.22591305 0.15801482 0.51813245 0.36912854
 0.46410558 0.56122498 0.63536354 0.2694218  0.57197087 0.68353641
 0.53042879 0.4931545  0.77871288 0.61086914 0.8343973  0.55031716
 0.21975462 0.89069621 0.69222172 0.43282825 0.82343544 0.36679849
 0.6842332  0.15023644 0.55938231 0.47567909 0.59041732 0.66001239
 0.38505346 0.49147633 0.18226089 0.27308881 0.2191493 ]
2024-06-16 21:43:23,478 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2024-06-16 21:43:25,044 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -189.0, best pos: [0.31679906 0.52855279 0.5842437  0.18761909 0.67230805 0.56214351
 0.71724203 0.18370915 0.43100437 0.49099139 0.2022103  0.61869735
 0.45411732 0.23833508 0.73530352 0.8593774  0.64246283 0.56619979
 0.30188147 0.55430703 0.42834872 0.53930968 0.70472742 0.53707516
 0.22200778 0.83068533 0.27409332 0.65672844 0.27453892 0.35495129
 0.49902705 0.59892986 0.40557534 0.37880524 0.61849298 0.86778026
 0.4039897  0.24055125 0.41974283 0.38994579 0.51953142 0.70750756
 0.27520479 0.72045007 0.38676753 0.16287688]
2024-06-16 21:43:51,066 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2024-06-16 21:44:00,778 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -197.0, best pos: [0.41779758 0.84899296 0.67611011 0.57044358 0.73642528 0.51930567
 0.106334   0.24657409 0.74882542 0.4463259  0.36025215 0.54393568
 0.34457513 0.69954708 0.48551944 0.42153069 0.23675057 0.39144519
 0.31744705 0.66766688 0.52681255 0.60973478 0.43079596 0.55586045
 0.2722114  0.85078869 0.80838232 0.32781708 0.13908936 0.5327147
 0.17329434 0.31470729 0.12697359 0.59109926 0.43928293 0.28379142
 0.74488759 0.7074968  0.49285878 0.62895648 0.87301362 0.772005
 0.44037609 0.81955145 0.59620292 0.25066251 0.36122251]
2024-06-16 21:44:30,939 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2024-06-16 21:44:41,090 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -192.0, best pos: [0.57077599 0.6795412  0.44395414 0.39788402 0.27913871 0.48761842
 0.23833498 0.34406093 0.43843527 0.84152689 0.58801135 0.50183124
 0.45616833 0.65180102 0.11026509 0.53759164 0.44372924 0.2425792
 0.60338061 0.4271766  0.43693548 0.2192043  0.70719591 0.86183612
 0.47972998 0.3827709  0.51379176 0.65455901 0.44556735 0.72351983
 0.58935919 0.59423282 0.38992785 0.63609278 0.36186894 0.21276204
 0.39855385 0.19988509 0.76308239 0.53791418 0.53700956 0.27204715
 0.5486519  0.47287679 0.79324936 0.38223377]
2024-06-16 21:45:07,261 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2024-06-16 21:45:14,499 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2024-06-16 21:45:15,838 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -184.0, best pos: [0.63765917 0.40419954 0.39092853 0.8168498  0.27841261 0.57252152
 0.54470989 0.87204867 0.38044584 0.1546419  0.51982334 0.64804517
 0.70644667 0.40071111 0.79153254 0.53953465 0.12564275 0.23544832
 0.41704695 0.25692409 0.38895519 0.33273107 0.61690628 0.56682935
 0.5227832  0.70476852 0.39206581 0.70193884 0.60061893 0.75554243
 0.80530269 0.16638125 0.8848292  0.50842372 0.53466179 0.77534507
 0.50769135 0.73638261 0.33189531 0.44653484 0.13538068 0.62326936
 0.68873889 0.48730089 0.32686843 0.26903302 0.66204782]
2024-06-16 21:46:48,737 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2024-06-16 21:46:50,092 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -189.0, best pos: [0.45073866 0.79848742 0.4858952  0.61850953 0.75436563 0.64206167
 0.24689083 0.77611187 0.83411219 0.57528595 0.65912415 0.2392098
 0.32207403 0.31071783 0.38275248 0.66911788 0.41925817 0.59163655
 0.6659573  0.46371428 0.7943874  0.82746917 0.44426137 0.61783806
 0.17467695 0.27117271 0.57608009 0.30660658 0.21972036 0.66797356
 0.74823765 0.48250119 0.46720374 0.57860101 0.47653817 0.66808057
 0.5075498  0.87097103 0.2702164  0.72241842 0.28539617 0.5699409
 0.61059393 0.44076823 0.35274442 0.58547201 0.35386946]
2024-06-16 21:47:48,843 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2024-06-16 21:47:50,046 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -181.0, best pos: [0.50728355 0.71097933 0.88683493 0.23131714 0.62101902 0.47747669
 0.172914   0.34880578 0.28512864 0.55757959 0.52821909 0.66935918
 0.44265954 0.19675785 0.19989245 0.61525382 0.48240403 0.75504032
 0.86444962 0.31210897 0.13686465 0.33207615 0.60245979 0.38367365
 0.73980534 0.44888426 0.35616537 0.23575632 0.56822016 0.24391707
 0.42824178 0.3910815  0.82720829 0.84994982 0.39327912 0.22848432
 0.36378941 0.38722826 0.72655785 0.84331138 0.7684732  0.13641961
 0.54594081 0.8674359  0.52468706 0.37220161 0.68570471 0.78610537
 0.76729357]
2024-06-16 21:49:25,127 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2024-06-16 21:49:26,369 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -187.0, best pos: [0.39669378 0.74543328 0.61732329 0.53251969 0.3367101  0.55171892
 0.50501582 0.20038868 0.26457236 0.22772961 0.52497217 0.1855107
 0.60183258 0.19954051 0.44590059 0.41186022 0.51601172 0.28087239
 0.38272818 0.51454882 0.49896641 0.21746372 0.82284929 0.61536619
 0.40861916 0.8203869  0.43607217 0.30267805 0.72325303 0.11218238
 0.40920819 0.22173368 0.46257099 0.64602457 0.328924   0.35164074
 0.18073129 0.6379061  0.70600798 0.48172235 0.50493835 0.35350203
 0.38629471 0.32066748 0.85276583 0.6060009  0.13889859 0.28461957]
2024-06-16 21:49:37,594 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2024-06-16 21:49:38,911 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -179.0, best pos: [0.15331252 0.40128517 0.20283076 0.2483009  0.80546467 0.61187135
 0.72824888 0.76005344 0.52630963 0.89915791 0.31573674 0.27178502
 0.78056657 0.83426312 0.48755459 0.5386024  0.46188765 0.78890256
 0.39413881 0.22570146 0.23097003 0.60967005 0.62009221 0.28183512
 0.51732053 0.62430282 0.80717111 0.44763177 0.57583645 0.65919161
 0.59515734 0.64607283 0.37888115 0.78523011 0.43211678 0.84892682
 0.60585587 0.80470116 0.54806458 0.1738315  0.56264563 0.74095459
 0.64428858 0.58402402 0.68092969 0.33609282 0.75485477 0.37592317]
2024-06-16 21:50:09,560 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2024-06-16 21:50:10,771 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -184.0, best pos: [0.58032946 0.43417118 0.63921145 0.72259384 0.54763456 0.27601096
 0.6189779  0.56176327 0.70662805 0.80958495 0.59181063 0.30458692
 0.5054519  0.46962644 0.65487263 0.39875793 0.53343464 0.77244249
 0.30809678 0.17605973 0.52564751 0.56920181 0.6804952  0.3090246
 0.72556229 0.14537706 0.49417188 0.44671906 0.42222    0.13081311
 0.67523902 0.45603997 0.54601466 0.77407824 0.47194413 0.21296051
 0.60022151 0.6332194  0.79876233 0.52504901 0.26870212 0.52594407
 0.66738294 0.17339605 0.86207548 0.46698377 0.70103963]
2024-06-16 22:04:18,148 - int_optimizer - INFO - Optimization finished | best cost: 13.0, best pos: [-3  2]
2024-06-16 22:04:20,026 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (48,)
Traceback (most recent call last):
  File "/home/siema/.cache/pypoetry/virtualenvs/inteligencja2-dsP7KcTb-py3.12/lib/python3.12/site-packages/pyswarms/backend/generators.py", line 65, in generate_swarm
    np.all(bounds[0] <= init_pos) and np.all(init_pos <= bounds[1])
           ^^^^^^^^^^^^^^^^^^^^^
ValueError: operands could not be broadcast together with shapes (48,) (5,2) 
2024-06-16 22:04:49,350 - int_optimizer - INFO - Optimization finished | best cost: 2.0, best pos: [ 1 -1]
2024-06-16 22:04:51,211 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (47,)
Traceback (most recent call last):
  File "/home/siema/.cache/pypoetry/virtualenvs/inteligencja2-dsP7KcTb-py3.12/lib/python3.12/site-packages/pyswarms/backend/generators.py", line 65, in generate_swarm
    np.all(bounds[0] <= init_pos) and np.all(init_pos <= bounds[1])
           ^^^^^^^^^^^^^^^^^^^^^
ValueError: operands could not be broadcast together with shapes (47,) (5,2) 
2024-06-16 22:05:12,182 - int_optimizer - INFO - Optimization finished | best cost: 4.0, best pos: [0 2]
2024-06-16 22:05:14,193 - int_optimizer - INFO - Optimization finished | best cost: -243.0, best pos: [6.46301951 6.31384036 6.71059636 7.94671407 5.98709549 2.12653617
 4.16716643 8.98920323 3.17849988 8.51135121 6.55757857 2.34869783
 5.64554032 4.26737803 1.85277753 2.99683297 1.01830536 8.80076288
 2.5709205  8.85998643 2.56114201 6.33984814 1.17589325 7.31645531
 8.20702664 6.18821025 2.87873975 8.02977849 5.53328782 1.27758437
 6.81754259 8.14082801 3.75336062 7.20403508 2.78879629 3.83008508
 2.37055626 3.37525756 2.12986954 2.31056977 3.51596817 6.28893994
 4.2178505  1.87712186 2.23256821 6.01571354 8.5855394  4.59688545]
2024-06-16 22:05:33,559 - int_optimizer - INFO - Optimization finished | best cost: 4.0, best pos: [0 2]
2024-06-16 22:05:35,603 - int_optimizer - INFO - Optimization finished | best cost: -243.0, best pos: [1.43675935 4.92520482 8.49129467 7.31289548 1.6461285  7.08198276
 3.95724329 1.23686364 2.55276958 4.79008759 4.06227053 2.63496935
 3.8063046  6.79679343 4.19561374 1.59166513 6.5381547  5.1824065
 1.22791158 3.78402976 4.28070135 1.41043192 7.87619485 2.51531911
 4.72047882 2.75091443 8.96205728 3.57593483 1.90985862 7.37169115
 7.26362336 6.34887265 3.69022638 7.01497803 5.04126217 3.46165619
 3.60410363 7.54597982 1.57360247 6.99326633 5.52280727 8.53785878
 1.45968981 1.03007848 8.1743627  7.47599286 6.94629076 4.69574572]
2024-06-16 22:05:58,946 - int_optimizer - INFO - Optimization finished | best cost: 4.0, best pos: [0 2]
2024-06-16 22:06:00,993 - int_optimizer - INFO - Optimization finished | best cost: -242.0, best pos: [6.60407739 3.56086025 2.97965182 7.12414171 6.53497407 6.2540097
 1.67478044 4.74885344 6.32222024 2.57033348 1.88391252 4.72381892
 2.88579364 1.59165169 4.33215957 6.47978393 2.1620333  8.67865537
 6.51249587 1.11119711 5.90654765 5.4597271  5.94295824 3.25489012
 6.62384759 2.55821133 4.54967248 7.65351884 3.65374259 7.88815136
 1.22204455 8.11428634 5.51695487 3.05050559 5.41165343 2.3491719
 8.65327618 5.78777177 7.26445605 1.88024349 3.1091453  5.83607634
 8.37101089 2.94929587 7.47557951 5.19002236]
2024-06-16 22:06:41,915 - int_optimizer - INFO - Optimization finished | best cost: 4.0, best pos: [0 2]
2024-06-16 22:06:43,951 - int_optimizer - INFO - Optimization finished | best cost: -242.0, best pos: [8.73708992 7.57731176 7.17583097 4.88781948 8.07625273 1.05420254
 3.26979438 2.55536153 3.99129308 7.74783159 1.12882315 4.94975299
 8.22657552 7.45284197 8.69125173 4.87907006 5.62105377 5.30500916
 2.02329282 8.05653355 8.48689094 1.99231606 4.94022965 7.77104373
 6.66923859 7.730101   8.47898759 1.81238157 6.68652959 2.02382926
 6.8116956  3.67360316 5.62234715 5.52233539 4.3947922  3.91334297
 2.33636857 4.85396693 7.83994504 7.66723855 7.96431735 8.11536397
 7.38280241 6.23100722 2.88584892 1.95026788 2.48987313 1.21927667]
2024-06-16 22:06:59,271 - int_optimizer - INFO - Optimization finished | best cost: 1.0, best pos: [0 1]
2024-06-16 22:07:01,476 - int_optimizer - INFO - Optimization finished | best cost: -242.0, best pos: [2.40134295 6.01800675 8.85180843 8.12397323 5.49683847 4.70431936
 5.62517106 5.67648551 8.6426537  6.76250121 7.65779688 5.11736896
 2.21504977 5.56024643 4.17059443 6.68768309 3.5760215  1.23965089
 2.91608    4.3286334  6.28316956 8.72014825 8.65101566 8.28592398
 8.08824161 6.170522   5.36737158 7.9571231  7.94075087 1.5453003
 1.97638408 4.16644176 5.22889184 4.02471461 7.2252741  4.24246827
 6.19009318 1.06848711 6.18589537 2.1902251  6.43357903 5.26665046
 6.46510205 4.52366306 5.57409507 8.92368357 5.8985604  4.94851456]
2024-06-16 22:07:39,370 - int_optimizer - INFO - Optimization finished | best cost: 13.0, best pos: [-2 -3]
2024-06-16 22:07:41,635 - int_optimizer - INFO - Optimization finished | best cost: -242.0, best pos: [4.1143355  3.05403646 7.57310117 7.19998718 8.76206954 4.96938682
 5.54790037 1.2819354  2.63906351 3.3435216  5.09855404 2.35818411
 6.54389508 1.18163021 1.27319669 1.36250432 6.49995806 2.474831
 2.32141036 6.10409142 2.1593575  2.51821878 5.76449575 1.04305055
 3.0893965  1.40676416 2.56296399 8.35467417 2.36573978 8.96157773
 2.29932683 1.38926351 1.68569823 7.76514875 3.39005043 2.30341076
 3.30406628 3.1445002  4.93362973 7.16340285 4.26973231 2.77211761
 3.33858608 5.76652622 1.4868872  3.07012171]
2024-06-16 22:07:45,702 - int_optimizer - INFO - Optimization finished | best cost: 9.0, best pos: [ 0 -3]
2024-06-16 22:07:47,911 - int_optimizer - INFO - Optimization finished | best cost: -243.0, best pos: [2.91935426 1.93349977 4.11149674 2.8535575  3.89835752 7.89278203
 7.28236112 4.38618125 4.54504601 6.72616365 8.26896716 8.78503089
 4.7109328  7.56337288 5.06296013 7.41833157 6.72944124 7.95113829
 4.57084817 3.43665392 2.7898602  8.67167729 5.43664066 4.11367819
 4.68954272 4.01698826 4.21295142 4.64763123 1.2755997  7.56901481
 3.99207063 8.42299167 5.3121243  2.20182629 1.96452054 6.23296738
 3.67378991 4.29742766 1.39679854 3.53082557 7.95155982 1.34703932
 8.80410635 1.7168162  3.66881001 6.95679179 5.34089169]
2024-06-16 22:08:10,021 - int_optimizer - INFO - Optimization finished | best cost: 2.0, best pos: [1 1]
2024-06-16 22:08:31,188 - int_optimizer - INFO - Optimization finished | best cost: 4.0, best pos: [0 2]
2024-06-16 22:08:33,560 - int_optimizer - INFO - Optimization finished | best cost: -241.0, best pos: [7.55702104 6.77560871 1.50490041 5.04059638 3.78858744 3.97714804
 8.96657109 2.98333004 7.19450043 4.87474472 8.12574232 6.11351994
 7.64089383 1.89965394 2.72553414 7.40262387 1.1614922  5.4360629
 7.69237171 3.92801013 8.06073621 1.28951644 2.94819534 2.17067607
 1.58737262 2.19440499 6.79660909 3.46757239 7.0178688  4.69652558
 6.84252714 8.33520024 4.70033656 3.92714939 5.5035081  4.55164773
 8.83978153 1.10292919 3.96980158 2.98003685 7.3837313  5.02623403
 5.37835033 4.57785189 7.46030759 7.63572199 7.29256172]
2024-06-16 22:08:52,665 - int_optimizer - INFO - Optimization finished | best cost: 13.0, best pos: [-3  2]
2024-06-16 22:08:54,826 - int_optimizer - INFO - Optimization finished | best cost: -242.0, best pos: [7.50935469 5.76661751 6.0373777  2.41127078 3.06801341 3.30033832
 5.904795   4.16186718 6.67388961 1.45882452 6.89214697 6.12092111
 1.38447769 2.41921741 7.91832857 4.73643826 6.93449342 2.05560269
 5.32851055 2.96838589 7.46110055 6.85923353 7.28899386 3.92193889
 6.25016067 4.53002128 1.02862329 6.65549675 3.38040407 8.31362451
 4.36589607 7.22518172 2.88391115 4.12082762 1.96800527 4.45121838
 6.44742237 8.3781394  7.75149643 6.5178431  6.28400386 4.29933423
 6.91627417 2.39269485 7.81017009 3.48950769 2.88578977]
2024-06-16 22:09:59,020 - int_optimizer - INFO - Optimization finished | best cost: 4.0, best pos: [0 2]
2024-06-16 22:10:01,172 - int_optimizer - INFO - Optimization finished | best cost: -243.0, best pos: [6.52156158 7.43052279 4.17266947 2.81854384 8.27398763 8.45668286
 1.1698627  8.23873258 4.56569375 1.21154784 4.28201522 7.64797944
 3.40200994 7.02690778 3.23832273 8.51195005 6.5435654  3.23737202
 4.87232239 7.0286441  6.72493371 4.47152485 3.80672917 6.79086566
 7.19194951 7.77245767 3.3135637  2.93493168 7.24055799 8.96344652
 1.84079744 5.78260346 6.19527306 6.82567234 8.75787886 1.38893849
 1.89909208 5.08696354 5.71082848 1.57281086 8.03477017 7.53373971
 3.39201712 3.85431284 1.45096045 7.52647336 7.35663627 3.11900861
 6.65008005]
2024-06-16 22:10:32,577 - int_optimizer - INFO - Optimization finished | best cost: 8.0, best pos: [-2  2]
2024-06-16 22:10:34,556 - int_optimizer - INFO - Optimization finished | best cost: -242.0, best pos: [4.91419354 6.21305861 2.67397279 8.7692707  7.89576282 8.72968675
 3.0280211  2.24841504 8.97827663 3.25470643 4.40453744 6.53230187
 7.66175969 2.13587157 7.54936555 1.74932791 1.43599442 6.92028194
 8.4627664  1.31872391 2.10314066 7.7863136  7.44127785 7.00368905
 7.63497078 6.04250263 8.27989367 7.16017025 3.15376534 2.45362716
 3.30994451 1.60911569 7.41863162 8.15576935 3.01935445 5.4697361
 3.21607755 4.78097502 8.58288039 1.21658106 5.85900614 4.29894094
 7.48732482 3.96743766 1.29828096 3.0869165 ]
2024-06-16 22:12:22,716 - int_optimizer - INFO - Optimization finished | best cost: 2.0, best pos: [-1 -1]
2024-06-16 22:12:24,692 - int_optimizer - INFO - Optimization finished | best cost: -178.0, best pos: [8. 5. 7. 4. 1. 4. 8. 8. 8. 6. 7. 4. 1. 5. 6. 5. 7. 5. 4. 6. 5. 6. 7. 6.
 5. 3. 4. 2. 3. 1. 3. 5. 3. 7. 8. 1. 4. 6. 8. 5. 1. 2. 2. 6. 5. 3. 8.]
2024-06-16 22:12:29,317 - int_optimizer - INFO - Optimization finished | best cost: 2.0, best pos: [-1 -1]
2024-06-16 22:12:31,315 - int_optimizer - INFO - Optimization finished | best cost: -175.0, best pos: [3.66488726 8.85536035 1.39404227 7.81670217 3.42882885 4.30298581
 4.92146458 1.60668006 4.2344684  4.65708397 4.30793831 6.12422763
 6.02764394 8.91564311 4.20049563 4.38615587 2.07748153 3.44244556
 1.29281691 1.69999847 5.5101619  1.65501409 3.44588767 2.10578552
 5.07315937 7.50803581 4.96827451 8.99845308 2.26328203 5.54358836
 1.10666781 6.22171122 4.95773984 6.978098   7.73450218 2.47125986
 1.00753377 2.48791262 5.64466048 2.02973342 2.24700094 2.65743549
 2.97144575 3.89820277 5.47672549 7.04720327 7.78718156]
2024-06-16 22:12:34,366 - int_optimizer - INFO - Optimization finished | best cost: 13.0, best pos: [-3 -2]
2024-06-16 22:12:36,353 - int_optimizer - INFO - Optimization finished | best cost: -177.0, best pos: [1. 3. 5. 4. 4. 8. 4. 4. 2. 6. 5. 6. 9. 7. 1. 4. 7. 2. 4. 5. 6. 2. 8. 7.
 3. 8. 6. 2. 5. 8. 2. 4. 3. 5. 1. 6. 6. 8. 5. 5. 2. 2. 5. 3. 7. 4. 2.]
2024-06-16 22:13:02,052 - int_optimizer - INFO - Optimization finished | best cost: 10.0, best pos: [-3  1]
2024-06-16 22:13:10,933 - int_optimizer - INFO - Optimization finished | best cost: -185.0, best pos: [7. 4. 2. 1. 4. 5. 4. 8. 7. 5. 4. 4. 7. 2. 9. 3. 4. 6. 7. 2. 7. 4. 9. 5.
 3. 7. 6. 8. 1. 8. 9. 7. 7. 5. 5. 6. 4. 3. 9. 5. 2. 6. 3. 5. 4. 6. 8.]
2024-06-16 22:13:21,076 - int_optimizer - INFO - Optimization finished | best cost: 13.0, best pos: [-3  2]
2024-06-16 22:13:29,882 - int_optimizer - INFO - Optimization finished | best cost: -184.0, best pos: [2. 5. 6. 4. 1. 7. 9. 6. 1. 4. 6. 8. 7. 1. 3. 8. 4. 2. 7. 7. 1. 3. 4. 4.
 5. 9. 1. 3. 5. 3. 6. 2. 4. 6. 4. 8. 6. 7. 8. 2. 7. 7. 9. 3. 1. 6. 7. 1.]
2024-06-16 22:14:51,169 - int_optimizer - INFO - Optimization finished | best cost: 0.0, best pos: [0 0]
2024-06-16 22:15:35,647 - int_optimizer - INFO - Optimization finished | best cost: 1.0, best pos: [0 1]
2024-06-16 22:15:37,519 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2024-06-16 22:15:38,436 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -184.0, best pos: [0.54178111 0.33552874 0.32945594 0.49513978 0.3956808  0.68467885
 0.49029603 0.58482422 0.73719532 0.5022214  0.32971999 0.41879035
 0.39425034 0.75035845 0.44368397 0.89725705 0.70555054 0.51144443
 0.27442439 0.44374929 0.38972136 0.18365957 0.61329547 0.86068761
 0.48901679 0.63924355 0.35865535 0.73893367 0.24972404 0.69516034
 0.41166353 0.59894963 0.38872636 0.80528561 0.88905871 0.44952802
 0.42701879 0.4203344  0.31041543 0.57892495 0.59632082 0.2421246
 0.54251455 0.45516128 0.19886925 0.61068118]
2024-06-16 22:15:52,489 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2024-06-16 22:15:53,391 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -180.0, best pos: [0.28635042 0.11507383 0.63640462 0.17527719 0.16770207 0.85951508
 0.2718024  0.32855845 0.2537461  0.66732547 0.76829535 0.26089629
 0.31988986 0.82535621 0.37884385 0.34864509 0.17860003 0.42826648
 0.62523657 0.21494082 0.62760824 0.56881544 0.12791469 0.53613705
 0.20660957 0.39911402 0.62483153 0.28467021 0.5318297  0.3711602
 0.47628463 0.32598501 0.53923278 0.77600433 0.47882205 0.45737234
 0.66730757 0.53491145 0.86240201 0.15998057 0.6399902  0.42584696
 0.89755894 0.78256949 0.58480817 0.89477169 0.2823295  0.43102317
 0.43465917]
2024-06-16 22:16:16,843 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2024-06-16 22:16:17,907 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -187.0, best pos: [0.70462096 0.52622536 0.29301409 0.42979023 0.36710032 0.47723308
 0.8240019  0.56205853 0.50959251 0.51563478 0.39215065 0.50359359
 0.25041723 0.56551517 0.72928878 0.32697661 0.43416818 0.54280297
 0.48707188 0.51041398 0.29236679 0.16172559 0.32956932 0.55938667
 0.84072659 0.67236009 0.70548616 0.37262992 0.49061251 0.67957902
 0.76811839 0.52068509 0.43941046 0.52428383 0.77674747 0.37046456
 0.37421572 0.66125125 0.68795918 0.29350717 0.54849113 0.62861252
 0.44902917 0.31119958 0.40267324 0.87949966 0.58459232 0.25441551]
2024-06-16 22:16:42,050 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2024-06-16 22:17:48,621 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -197.0, best pos: [0.26525441 0.87129751 0.34224243 0.44359546 0.1773567  0.59511515
 0.48575992 0.29072058 0.5398508  0.31335249 0.86836495 0.10659242
 0.58947809 0.24339847 0.46018772 0.617896   0.29856135 0.81070188
 0.66553575 0.60760437 0.4233311  0.58937253 0.36986753 0.83956264
 0.46818499 0.46264541 0.16865458 0.78511081 0.21856042 0.7387886
 0.77205551 0.19364223 0.62266184 0.82550408 0.66035556 0.48791161
 0.87336735 0.66321232 0.52450624 0.36700891 0.41330304 0.82354311
 0.52562729 0.70694592 0.51165066 0.26510327]
2024-06-16 22:18:14,208 - pyswarms.single.global_best - INFO - Optimize for 5000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2024-06-16 22:21:39,405 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -198.0, best pos: [0.31136907 0.6123281  0.80424435 0.35389948 0.29028139 0.42160362
 0.51102268 0.68665481 0.17208576 0.77913096 0.28604548 0.28840697
 0.47742036 0.42178295 0.51031047 0.59071742 0.62300584 0.71919428
 0.64502108 0.69192956 0.3808835  0.23480435 0.3138047  0.61404185
 0.13874452 0.15942895 0.42480802 0.48029517 0.58240923 0.61836789
 0.48920631 0.87863079 0.42971219 0.11237446 0.26119744 0.31635656
 0.58379569 0.72353182 0.29675943 0.14517751 0.69632726 0.31736957
 0.39828153 0.69241904 0.81762534 0.57716714 0.40243499]
2024-06-16 22:32:32,099 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2024-06-16 22:32:50,509 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2024-06-16 22:33:02,078 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -190.0, best pos: [0.83161934 0.6911736  0.67902521 0.17889247 0.35168393 0.82953588
 0.23180433 0.33766063 0.51966949 0.81288453 0.99611022 0.36479322
 0.26355837 0.61903325 0.18058154 0.22865357 0.71742032 0.31334809
 0.14518482 0.50476756 0.64610658 0.8779103  0.80815032 0.29613525
 0.45917834 0.58822279 0.26031631 0.03027146 0.42435095 0.44371067
 0.34893073 0.54455496 0.60139602 0.15592303 0.5537901  0.11665715
 0.58743177 0.43058581 0.03146383 0.91370237 0.13178784 0.81785828
 0.44553633 0.23084118 0.51469292 0.62977524 0.62750318]
2024-06-16 22:33:22,878 - pyswarms.single.global_best - INFO - Optimize for 5000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2024-06-16 22:33:59,922 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -190.0, best pos: [0.36445459 0.70811438 0.68950282 0.77481595 0.7143967  0.2878926
 0.48359574 0.16784379 0.4214147  0.54601045 0.22244966 0.39443281
 0.52025487 0.40230569 0.67031509 0.35590582 0.41962226 0.2259753
 0.16558243 0.3898485  0.46687138 0.72333429 0.52793979 0.35032078
 0.46706405 0.29116349 0.66122546 0.31164883 0.57667178 0.77886256
 0.54878927 0.55011655 0.62324807 0.42825312 0.26395971 0.75019929
 0.8171105  0.3177701  0.6832181  0.50247552 0.43321426 0.25451655
 0.82998147 0.63372521 0.65935384 0.44442939]
2024-06-16 22:42:31,667 - pyswarms.single.local_best - INFO - Optimize for 5000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 3, 'p': 2}
2024-06-16 22:43:11,345 - pyswarms.single.local_best - INFO - Optimization finished | best cost: -186.0, best pos: [0.10989393 0.44392254 0.18587675 0.69687985 0.37273387 0.2023174
 0.20360965 0.31389732 0.89973948 0.6224391  0.38131215 0.50061459
 0.86259362 0.41653742 0.62419582 0.73137937 0.40235127 0.52608854
 0.26309676 0.61352129 0.81571495 0.17069748 0.79819572 0.23081842
 0.72850107 0.58471361 0.55741603 0.29501294 0.59860848 0.44538056
 0.50928078 0.28471706 0.43172485 0.62175633 0.66209477 0.18646634
 0.4537017  0.45732693 0.20375993 0.56129635 0.71316889 0.31676524
 0.47117685 0.54032303 0.24582803 0.82627804 0.60172727 0.17018076]
